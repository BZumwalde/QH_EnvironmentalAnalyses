theme(plot.title = element_text(hjust=0.5), axis.text.x = element_blank())
dev.off()
tapply(dat.ll$mass_g, dat.ll$plot, mean)
tapply(dat.ll$mass_g, dat.ll$plot, sd)
res.aov <- aov(mass_g ~ plot, data = dat.ll)
summary(res.aov)
library(data.table)
outlierReplace = function(dat.ll, cols, rows, newValue = NA) {
if (any(rows)) {
set(dat.ll, rows, cols, newValue)
}
}
outlierReplace(dat.ll, "mass_g", which(dat.ll$mass_g > 50), NA)
png("LL_TotalMassAllTissue_BySpecies_DiscardOutliers.png")
ggboxplot(dat.ll, x = "plot", y = "mass_g",
color = "taxon",
facet.by = "plot",
ylab = "Mass (g)", xlab = "Plot",
title = "(Raw) Total Mass of All Tissue Sep2018-Jan2019",
legend = "right") +
facet_wrap(~plot, scales = "free")+
theme(plot.title = element_text(hjust=0.5), axis.text.x = element_blank()
)
dev.off()
png("LL_TotalMassAllTissue_BySpecies_DiscardOutliers.png")
ggboxplot(dat.ll, x = "plot", y = "mass_g",
color = "taxon",
facet.by = "plot",
ylab = "Mass (g)", xlab = "Plot",
title = "(Raw) Total Mass of All Tissue Sep2018-Jan2019",
legend = "right") +
facet_wrap(~plot, scales = "free")+
theme(plot.title = element_text(hjust=0.5), axis.text.x = element_blank())
dev.off()
library(stats); library(dismo); library(maptools); library(rgdal)
library(tibble);library(scales);library(ggbiplot);library(ggplot2)
library("FactoMineR")
library("factoextra")
library(ggrepel)
setwd("E:/Zumwalde/havardii_environmental/data")
files <- list.files("WORLDCLIM", pattern='tif', full.names=TRUE) #Load climate files
bioclim2.5 <- stack(files) #Create a raster stack
setwd("~/Documents/GitHub/QH_EnvironmentalAnalyses")
QHloc_Final <- read.csv("QH_Pops_Final.csv", sep=",", header=T, stringsAsFactors = FALSE)
data(wrld_simpl)
files <- list.files("WORLDCLIM", pattern='tif', full.names=TRUE) #Load climate files
bioclim2.5 <- stack(files) #Create a raster stack
setwd("E:/Zumwalde/havardii_environmental/QH_EnvironmentalAnalyses")
setwd("E:/Zumwalde/havardii_environmental/QH_EnvironmentalAnalyses")
files <- list.files("WORLDCLIM", pattern='tif', full.names=TRUE) #Load climate files
bioclim2.5 <- stack(files) #Create a raster stack
setwd("~/Documents/GitHub/QH_EnvironmentalAnalyses")
QHloc_Final <- read.csv("QH_Pops_Final.csv", sep=",", header=T, stringsAsFactors = FALSE)
data(wrld_simpl)
climateFinal <- climate <- extract(bioclim2.5, QHloc_Final[,1:2]) #Extract climate data for locations
climateFinal
bioclim_names <- c("BIO1","BIO2","BIO3","BIO4","BIO5","BIO6","BIO7","BIO8","BIO9","BIO10","BIO11","BIO12","BIO13","BIO14","BIO15","BIO16","BIO17","BIO18","BIO19")
colnames(climateFinal) <- bioclim_names
rownames(climateFinal) <-  c("E1", "E2", "E3", "E4", "E5", "E6", "E7", "E10", "E13", "E14", "W1", "W2", "W3", "W4", "W5", "W6", "W7", "W8", "W9", "W10", "W11", "W12", "WAUX3")
pops <-  c("E1", "E2", "E3", "E4", "E5", "E6", "E7", "E10", "E13", "E14", "W1", "W2", "W3", "W4", "W5", "W6", "W7", "W8", "W9", "W10", "W11", "W12", "WAUX3")
library(mvnormtest); library("ggpubr"); library(dplyr); library(car)
climate.region <- c(rep("E",10), rep("W",13))
climateFinal2 <- as.data.frame(climateFinal, row.names = TRUE)
colnames(climateFinal2) <- c("reg", "pops", "BIO1","BIO2","BIO3","BIO4","BIO5","BIO6","BIO7","BIO8","BIO9","BIO10","BIO11","BIO12","BIO13","BIO14","BIO15","BIO16","BIO17","BIO18","BIO19")
climateFinal2 <- cbind(climate.region,pops,climateFinal2)
dim(climateFinal2)
climateFinal2 <- climateFinal2[,-c(3,7,8,15,18,20)]
climateFinal2
shapiro.test(climateFinal2$BIO2)
shapiro.test(climateFinal2$BIO3)
shapiro.test(climateFinal2$BIO4)
shapiro.test(climateFinal2$BIO7)
hist(climateFinal2$BIO7)
hist(climateFinal2$BIO19)
climateFinal2
install.packages("bestNormalize")
library(bestNormalize)
install.packages("bestNormalize")
install.packages("C:/Users/BZumwalde/AppData/Local/Temp/RtmpYHpPkP/downloaded_packages/bestNormalize_1.4.0.tar.gz", repos = NULL, type = "source")
install.packages(bestNormalize)
shapiro.test(climateFinal2$BIO8) #not normal p = 0.009768
hist(climateFinal2$BIO8)
BIO8_Trans <- sqrt(climateFinal2$BIO8)
hist(BIO8_Trans)
shapiro.test(BIO8_Trans) #can't
shapiro.test(climateFinal2$BIO9) #not normal p = 0.0153
hist(climateFinal2$BIO9)
BIO9_Trans <- sqrt(climateFinal2$BIO9)
hist(BIO9_Trans)
shapiro.test(BIO9_Trans) #can't
hist(climateFinal2$BIO10)
shapiro.test(climateFinal2$BIO10) #not normal p = 0.01895
hist(climateFinal2$BIO10)
BIO10_Trans <- sqrt(climateFinal2$BIO10)
hist(BIO10_Trans)
shapiro.test(BIO10_Trans) # p normal = 0.0886
shapiro.test(climateFinal2$BIO10) #not normal p = 0.01895
hist(climateFinal2$BIO10)
BIO10_Trans <- (climateFinal2$BIO10)^3
hist(BIO10_Trans)
shapiro.test(BIO10_Trans) # p normal = 0.0886
shapiro.test(climateFinal2$BIO11)
shapiro.test(climateFinal2$BIO12) #not normal p = 0.008731
ggboxplot(climateFinal2, x = "climate.region", y = "BIO1",
color = "climate.region",
order = c("E", "W"),
ylab = "Region", xlab = "BIO10")
climateFinal2
install.packages("C:/Users/BZumwalde/Downloads/mvnormtest_0.1-9.zip", repos = NULL, type = "win.binary")
library(mvnormtest)
library(stats); library(dismo); library(maptools); library(rgdal)
#For PCA and correlations
#install_github("vqv/ggbiplot")
library(tibble);library(scales);library(ggbiplot);library(ggplot2)
#install_github("vqv/ggbiplot") # must be installed after devtools is loaded in
library("FactoMineR")
library("factoextra")
library(ggrepel)
#*******************************************#
#Read in data and building matrix
#*******************************************#
setwd("E:/Zumwalde/havardii_environmental/QH_EnvironmentalAnalyses")
#setwd("~/Desktop/QH_Environ")
# http://worldclim.org/version2 is where data was pulled from
files <- list.files("WORLDCLIM", pattern='tif', full.names=TRUE) #Load climate files
bioclim2.5 <- stack(files) #Create a raster stack
#dim(bioclim30s) #Looks at data structure
setwd("~/Documents/GitHub/QH_EnvironmentalAnalyses")
QHloc_Final <- read.csv("QH_Pops_Final.csv", sep=",", header=T, stringsAsFactors = FALSE)
data(wrld_simpl)
climateFinal <- climate <- extract(bioclim2.5, QHloc_Final[,1:2]) #Extract climate data for locations
bioclim_names <- c("BIO1","BIO2","BIO3","BIO4","BIO5","BIO6","BIO7","BIO8","BIO9","BIO10","BIO11","BIO12","BIO13","BIO14","BIO15","BIO16","BIO17","BIO18","BIO19")
colnames(climateFinal) <- bioclim_names
rownames(climateFinal) <-  c("E1", "E2", "E3", "E4", "E5", "E6", "E7", "E10", "E13", "E14", "W1", "W2", "W3", "W4", "W5", "W6", "W7", "W8", "W9", "W10", "W11", "W12", "WAUX3")
pops <-  c("E1", "E2", "E3", "E4", "E5", "E6", "E7", "E10", "E13", "E14", "W1", "W2", "W3", "W4", "W5", "W6", "W7", "W8", "W9", "W10", "W11", "W12", "WAUX3")
library(mvnormtest); library("ggpubr"); library(dplyr); library(car); library(bestNormalize)
library(mvnormtest); library("ggpubr"); library(dplyr); library(car)
climateFinal2
climate.region <- c(rep("E",10), rep("W",13))
climateFinal2 <- as.data.frame(climateFinal, row.names = TRUE)
colnames(climateFinal2) <- c("reg", "pops", "BIO1","BIO2","BIO3","BIO4","BIO5","BIO6","BIO7","BIO8","BIO9","BIO10","BIO11","BIO12","BIO13","BIO14","BIO15","BIO16","BIO17","BIO18","BIO19")
climateFinal2 <- cbind(climate.region,pops,climateFinal2)
dim(climateFinal2)
climateFinal2 <- climateFinal2[,-c(3,7,8,15,18,20)]
climateFinal2
res.man <- manova(cbind(climateFinal2$BIO2:climatFinal2$BIO19) ~ pops, data = climateFinal2)
res.man <- manova(cbind(climateFinal2$BIO2:climateFinal2$BIO19) ~ pops, data = climateFinal2)
res.man
res.man <- manova(cbind(climateFinal2$BIO2, climateFinal2$BIO19) ~ pops, data = climateFinal2)
res.man
summary(res.man)
res.man <- manova(cbind(climateFinal2$BIO2, climateFinal2$BIO19) ~ pops, data = climateFinal2)
summary(res.man)
climateFinal2
res.man <- manova(cbind(climateFinal2$BIO2, climateFinal2$BIO19) ~ climate.region, data = climateFinal2)
summary(res.man)
climateFinal2
dim(climateFinal2)
man.clim <- cbind(3:115, data=climateFinal2)
man.clim
man.clim <- cbind(3:15, data=climateFinal2)
man.clim <- cbind(3:15, data=climateFinal2)
man.clim <- cbind(,3:15, data=climateFinal2)
man.clim <- data.frame(cbind(climateFinal2[,c(3:15)]))
man.clim
res.man <- manova(man.clim) ~ climate.region, data = climateFinal2
res.man <- manova(man.clim ~ climate.region, data = climateFinal2)
res.man <- manova(man.clim ~ climate.region)
root.manova <- summary(manova(man.clim ~ climateFinal2$climate.region))
root.manova
man.clim <- cbind(climateFinal2[,c(3:15)]))
man.clim <- cbind(climateFinal2[,c(3:15)])
man.clim
root.manova <- summary(manova(man.clim ~ climateFinal2$climate.region))
root.manova
man.clim
man.clim <- as.data.frame.list(cbind(climateFinal2[,c(3:15)]))
root.manova <- summary(manova(man.clim ~ climateFinal2$climate.region))
root.manova
man.clim
dependent.vars <- cbind(climateFinal2[,c(3:15)])
root.manova <- summary(manova(dependent.vars ~ climateFinal2$climate.region))
dependent.vars
root.manova <- summary(manova(dependent.vars ~ climateFinal2$pops))
root.manova
root.manova <- summary(manova(dependent.vars ~ climateFinal2$pops))
library(stats); library(dismo); library(maptools); library(rgdal)
library(tibble);library(scales);library(ggbiplot);library(ggplot2)
library("FactoMineR")
library("factoextra")
library(ggrepel)
setwd("E:/Zumwalde/havardii_environmental/QH_EnvironmentalAnalyses")
files <- list.files("WORLDCLIM", pattern='tif', full.names=TRUE) #Load climate files
bioclim2.5 <- stack(files) #Create a raster stack
QHloc_Final <- read.csv("QH_Pops_Final.csv", sep=",", header=T, stringsAsFactors = FALSE)
data(wrld_simpl)
climateFinal <- climate <- extract(bioclim2.5, QHloc_Final[,1:2]) #Extract climate data for locations
climateFinal
bioclim_names <- c("BIO1","BIO2","BIO3","BIO4","BIO5","BIO6","BIO7","BIO8","BIO9","BIO10","BIO11","BIO12","BIO13","BIO14","BIO15","BIO16","BIO17","BIO18","BIO19")
colnames(climateFinal) <- bioclim_names
rownames(climateFinal) <-  c("E1", "E2", "E3", "E4", "E5", "E6", "E7", "E10", "E13", "E14", "W1", "W2", "W3", "W4", "W5", "W6", "W7", "W8", "W9", "W10", "W11", "W12", "WAUX3")
pops <-  c("E1", "E2", "E3", "E4", "E5", "E6", "E7", "E10", "E13", "E14", "W1", "W2", "W3", "W4", "W5", "W6", "W7", "W8", "W9", "W10", "W11", "W12", "WAUX3")
climateFinal
climate.region <- c(rep("E",10), rep("W",13))
climate.region_Final <- c(rep("E",10), rep("W",13))
climateFinal2 <- as.data.frame(climateFinal, row.names = TRUE)
climateFinal2 <- climateFinal2[,-c(1,5,6,13,16,18)]
climateFinal.pca2 <- prcomp(climateFinal2, center = TRUE,scale. = TRUE)
climateFinal.pca2  #loadings
climateFinal2 <- cbind(climate.region,pops,climateFinal2)
colnames(climateFinal2) <- c("reg", "pops", "BIO2","BIO3","BIO4","BIO7","BIO8","BIO9","BIO10","BIO11","BIO12","BIO14","BIO15","BIO17","BIO19")
dim(climateFinal2)
climateFinal2
ggbiplot(climateFinal.pca2, ellipse = FALSE, obs.scale = 1.5, var.scale = 1.5, varname.adjust = 3.2,
var.axes = TRUE, labels= NULL, groups=climate.region_Final)+
geom_text_repel(aes(label = rownames(climateFinal)), nudge_x = 0.1, size=4)+
scale_colour_manual(values = c("red", "blue"))+
geom_point(aes(shape=climate.region_Final, color=climate.region_Final, size=3))+
theme_light(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5))+
theme(legend.position = "bottom") +
theme(legend.position = "none")
e <- ggbiplot(climateFinal.pca2, ellipse = FALSE, obs.scale = 1.25, var.scale = 1.5, varname.adjust = 1.5,
var.axes = TRUE, labels= NULL, groups=climate.region_Final)+
geom_text_repel(aes(label = rownames(climateFinal)), color = "black", nudge_x = 0.25, nudge_y = 0.1, size=4.5)+
scale_colour_manual(values = c("red", "blue"))+
geom_point(aes(shape=climate.region_Final, color=climate.region_Final, size=3))+
geom_hline(yintercept = 0, color = "black")+
geom_vline(xintercept = 0, color = "black")+
xlab(expression("Axis 1 (42.4%)")) +
ylab(expression("Axis 2 (21.5%)"))+
ggtitle("Environmental") +
theme_classic(base_size = 10) +
theme(plot.title = element_text(hjust = 0.5))+
theme(panel.border = element_rect(fill="transparent", colour = "black")) +
theme(legend.position = "none") +
scale_x_reverse()
e
e$layers <- c(e$layers, e$layers[[3]])
e$layers <- c(e$layers, e$layers[[1]])
e
ggbiplot <- function (pcobj, choices = 1:2, scale = 1, pc.biplot = TRUE,
obs.scale = 1 - scale, var.scale = scale, groups = NULL,
ellipse = FALSE, ellipse.prob = 0.68, labels = NULL, labels.size = 3,
alpha = 1, var.axes = TRUE, circle = FALSE, circle.prob = 0.69,
varname.size = 3, varname.adjust = 1.5, varname.abbrev = FALSE,
...)
{
library(ggplot2)
library(plyr)
library(scales)
library(grid)
stopifnot(length(choices) == 2)
if (inherits(pcobj, "prcomp")) {
nobs.factor <- sqrt(nrow(pcobj$x) - 1)
d <- pcobj$sdev
u <- sweep(pcobj$x, 2, 1/(d * nobs.factor), FUN = "*")
v <- pcobj$rotation
}
else if (inherits(pcobj, "princomp")) {
nobs.factor <- sqrt(pcobj$n.obs)
d <- pcobj$sdev
u <- sweep(pcobj$scores, 2, 1/(d * nobs.factor), FUN = "*")
v <- pcobj$loadings
}
else if (inherits(pcobj, "PCA")) {
nobs.factor <- sqrt(nrow(pcobj$call$X))
d <- unlist(sqrt(pcobj$eig)[1])
u <- sweep(pcobj$ind$coord, 2, 1/(d * nobs.factor), FUN = "*")
v <- sweep(pcobj$var$coord, 2, sqrt(pcobj$eig[1:ncol(pcobj$var$coord),
1]), FUN = "/")
}
else if (inherits(pcobj, "lda")) {
nobs.factor <- sqrt(pcobj$N)
d <- pcobj$svd
u <- predict(pcobj)$x/nobs.factor
v <- pcobj$scaling
d.total <- sum(d^2)
}
else {
stop("Expected a object of class prcomp, princomp, PCA, or lda")
}
choices <- pmin(choices, ncol(u))
df.u <- as.data.frame(sweep(u[, choices], 2, d[choices]^obs.scale,
FUN = "*"))
v <- sweep(v, 2, d^var.scale, FUN = "*")
df.v <- as.data.frame(v[, choices])
names(df.u) <- c("xvar", "yvar")
names(df.v) <- names(df.u)
if (pc.biplot) {
df.u <- df.u * nobs.factor
}
r <- sqrt(qchisq(circle.prob, df = 2)) * prod(colMeans(df.u^2))^(1/4)
v.scale <- rowSums(v^2)
df.v <- r * df.v/sqrt(max(v.scale))
if (obs.scale == 0) {
u.axis.labs <- paste("standardized PC", choices, sep = "")
}
else {
u.axis.labs <- paste("PC", choices, sep = "")
}
u.axis.labs <- paste(u.axis.labs, sprintf("(%0.1f%% explained var.)",
100 * pcobj$sdev[choices]^2/sum(pcobj$sdev^2)))
if (!is.null(labels)) {
df.u$labels <- labels
}
if (!is.null(groups)) {
df.u$groups <- groups
}
if (varname.abbrev) {
df.v$varname <- abbreviate(rownames(v))
}
else {
df.v$varname <- rownames(v)
}
df.v$angle <- with(df.v, (180/pi) * atan(yvar/xvar))
df.v$hjust = with(df.v, (1 - varname.adjust * sign(xvar))/2)
g <- ggplot(data = df.u, aes(x = xvar, y = yvar)) + xlab(u.axis.labs[1]) +
ylab(u.axis.labs[2]) + coord_equal()
if (var.axes) {
if (circle) {
theta <- c(seq(-pi, pi, length = 50), seq(pi, -pi,
length = 50))
circle <- data.frame(xvar = r * cos(theta), yvar = r *
sin(theta))
g <- g + geom_path(data = circle, color = muted("white"),
size = 1/2, alpha = 1/3)
}
g <- g + geom_segment(data = df.v, aes(x = 0, y = 0,
xend = xvar, yend = yvar), arrow = arrow(length = unit(1/4,
"picas")), color = ("grey40"))
}
if (!is.null(df.u$labels)) {
if (!is.null(df.u$groups)) {
g <- g + geom_text(aes(label = labels, color = groups),
size = labels.size)
}
else {
g <- g + geom_text(aes(label = labels), size = labels.size)
}
}
else {
if (!is.null(df.u$groups)) {
g <- g + geom_point(aes(color = groups), alpha = alpha)
}
else {
g <- g + geom_point(alpha = alpha)
}
}
if (!is.null(df.u$groups) && ellipse) {
theta <- c(seq(-pi, pi, length = 50), seq(pi, -pi, length = 50))
circle <- cbind(cos(theta), sin(theta))
ell <- ddply(df.u, "groups", function(x) {
if (nrow(x) <= 2) {
return(NULL)
}
sigma <- var(cbind(x$xvar, x$yvar))
mu <- c(mean(x$xvar), mean(x$yvar))
ed <- sqrt(qchisq(ellipse.prob, df = 2))
data.frame(sweep(circle %*% chol(sigma) * ed, 2,
mu, FUN = "+"), groups = x$groups[1])
})
names(ell)[1:2] <- c("xvar", "yvar")
g <- g + geom_path(data = ell, aes(color = groups, group = groups))
}
if (var.axes) {
g <- g + geom_text_repel(data = df.v, aes(label = varname,
x = xvar, y = yvar, angle = angle, hjust = hjust),
color = "grey40", size = 3)
}
return(g)
}
e <- ggbiplot(climateFinal.pca2, ellipse = FALSE, obs.scale = 1.25, var.scale = 1.5, varname.adjust = 1.5,
var.axes = TRUE, labels= NULL, groups=climate.region_Final)+
geom_text_repel(aes(label = rownames(climateFinal)), color = "black", nudge_x = 0.25, nudge_y = 0.1, size=4.5)+
scale_colour_manual(values = c("red", "blue"))+
geom_point(aes(shape=climate.region_Final, color=climate.region_Final, size=3))+
geom_hline(yintercept = 0, color = "black")+
geom_vline(xintercept = 0, color = "black")+
xlab(expression("Axis 1 (42.4%)")) +
ylab(expression("Axis 2 (21.5%)"))+
ggtitle("Environmental") +
theme_classic(base_size = 10) +
theme(plot.title = element_text(hjust = 0.5))+
theme(panel.border = element_rect(fill="transparent", colour = "black")) +
theme(legend.position = "none") +
scale_x_reverse()
e
e$layers <- c(e$layers, e$layers[[3]])
e$layers <- c(e$layers, e$layers[[1]])
e
e <- ggbiplot(climateFinal.pca2, ellipse = FALSE, obs.scale = 1.25, var.scale = 1.5, varname.adjust = 1.5,
var.axes = FALSE, labels= NULL, groups=climate.region_Final)+
scale_colour_manual(values = c("red", "blue"))+
geom_hline(yintercept = 0, color = "grey")+
geom_vline(xintercept = 0, color = "grey")+
geom_point(aes(shape=climate.region_Final, color=climate.region_Final, size=1, labels=FALSE))+
geom_text_repel(aes(label = rownames(climateFinal)), color = "black", nudge_x = 0.2, nudge_y = 0.2, size=4.5)+
xlab(expression("Axis 1 (42.4%)")) +
ylab(expression("Axis 2 (21.5%)"))+
theme_classic(base_size = 10) +
ggtitle("(C) Environmental") +
theme(plot.title = element_text(face="bold", hjust = 0.5))+
theme(panel.border = element_rect(fill="transparent", colour = "black")) +
theme(legend.position = "none") +
scale_x_reverse()
e
e$layers <- c(e$layers, e$layers[[3]])
e$layers <- c(e$layers, e$layers[[1]])
e
reduced_means_July_15_1 <- read.csv("reduced_means_July_15_1.csv", sep=",", header=T, stringsAsFactors = FALSE)
rownames(reduced_means_July_15_1) <-  c("W1", "W2", "W3", "W4", "W5", "W6", "W7", "W8", "W9", "W10", "W11", "W12", "WAUX3", "E1", "E2", "E3", "E4", "E5", "E6", "E7", "E10")
reduced_means_July_15_1.pca <- prcomp(reduced_means_July_15_1[,c(3:19)], center = TRUE,scale. = TRUE)
reduced_means_July_15_1
reduced_means_July_15_1.pca <- prcomp(reduced_means_July_15_1[,c(3:19)], center = TRUE,scale. = TRUE)
two_groups <- c(rep("West",13), rep("East",8))
m<- ggbiplot(reduced_means_July_15_1.pca, ellipse = FALSE, obs.scale = 1.25, var.scale = 1.5, varname.adjust = 1.5,
var.axes = FALSE, labels= NULL, groups=two_groups)+
geom_hline(yintercept = 0, color = "grey")+
geom_vline(xintercept = 0, color = "grey")+
geom_point(aes(shape=two_groups, color=two_groups, size=2))+
geom_text_repel(aes(label = rownames(reduced_means_July_15_1)), color = "black", size=4.5)+
scale_colour_manual(values = c("red", "blue"))+
xlab(expression("Axis 1 (22.9%)"))+
ylab(expression("Axis 2 (17.9%)"))+
theme_classic(base_size = 10) +
ggtitle("(B) Morphological") +
theme(plot.title = element_text(face="bold", hjust = 0.5))+
theme(panel.border = element_rect(fill="transparent", colour = "black")) +
theme(legend.position = "none") +
scale_x_reverse()
m
m$layers <- c(m$layers, m$layers[[3]])
m$layers <- c(m$layers, m$layers[[1]])
m
ggbiplot(reduced_means_July_15_1.pca, ellipse = FALSE, obs.scale = 1.25, var.scale = 1.5, varname.adjust = 1.5,
var.axes = TRUE, labels= NULL, groups=two_groups)+
scale_colour_manual(values = c("red", "blue"))+
geom_point(aes(shape=two_groups, color=two_groups, size=3))+
geom_hline(yintercept = 0, color = "black")+
geom_vline(xintercept = 0, color = "black")+
geom_text (label=rownames (reduced_means_July_15_1))+
xlab(expression("Axis 1 (22.9%)")) +
ylab(expression("Axis 2 (17.9%)"))+
ggtitle("Morphological") +
theme_classic(base_size = 10) +
theme(plot.title = element_text(hjust = 0.5))+
theme(panel.border = element_rect(fill="transparent", colour = "black")) +
theme(legend.position = "none") +
scale_x_reverse()
m<- ggbiplot(reduced_means_July_15_1.pca, ellipse = FALSE, obs.scale = 1.25, var.scale = 1.5, varname.adjust = 1.5,
var.axes = TRUE, labels= NULL, groups=two_groups)+
geom_text_repel(aes(label = rownames(reduced_means_July_15_1)), color = "black", size=4.5)+
scale_colour_manual(values = c("red", "blue"))+
geom_point(aes(shape=two_groups, color=two_groups, size=3))+
geom_hline(yintercept = 0, color = "black")+
geom_vline(xintercept = 0, color = "black")+
xlab(expression("Axis 1 (22.9%)"))+
ylab(expression("Axis 2 (17.9%)"))+
ggtitle("Morphological") +
theme_classic(base_size = 10) +
theme(plot.title = element_text(hjust = 0.5))+
theme(panel.border = element_rect(fill="transparent", colour = "black")) +
theme(legend.position = "none") +
scale_x_reverse()
m
m$layers <- c(m$layers, m$layers[[3]])
m$layers <- c(m$layers, m$layers[[1]])
m
m<- ggbiplot(reduced_means_July_15_1.pca, ellipse = FALSE, obs.scale = 1.25, var.scale = 1.5, varname.adjust = 1.5,
var.axes = FALSE, labels= NULL, groups=two_groups)+
geom_hline(yintercept = 0, color = "grey")+
geom_vline(xintercept = 0, color = "grey")+
geom_point(aes(shape=two_groups, color=two_groups, size=2))+
geom_text_repel(aes(label = rownames(reduced_means_July_15_1)), color = "black", size=4.5)+
scale_colour_manual(values = c("red", "blue"))+
xlab(expression("Axis 1 (22.9%)"))+
ylab(expression("Axis 2 (17.9%)"))+
theme_classic(base_size = 10) +
ggtitle("(B) Morphological") +
theme(plot.title = element_text(face="bold", hjust = 0.5))+
theme(panel.border = element_rect(fill="transparent", colour = "black")) +
theme(legend.position = "none") +
scale_x_reverse()
m
m$layers <- c(m$layers, m$layers[[3]])
m$layers <- c(m$layers, m$layers[[1]])
m
QH_eigen <- read.csv("QH_eigen.csv", sep=",", header=T, stringsAsFactors = FALSE)
rownames(QH_eigen)<- c("E1", "E10", "E13", "E15", "E2", "E3", "E4", "E5", "E6", "E7",
"W1", "W10", "W11", "W12", "W2", "W3", "W4", "W5", "W6", "W7", "W8", "W9", "WAUX3")
colnames(QH_eigen) <- c("Pop","1", "2","3","4","5","6","7", "8","9","10","11","12","13", "14","15")
point_colors<-c(rep("red",10),rep("blue",13))
point_shapes<-c(rep(19,10),rep(24,13))
plot_col<-4
g <- ggplot(QH_eigen) +
geom_hline(yintercept = 0, color = "grey")+
geom_vline(xintercept = 0, color = "grey")+
geom_point(aes(x =QH_eigen$`1`, y = QH_eigen$`2`),
shape=point_shapes, color=point_colors, fill=point_colors, size=4.5)+
xlab(expression("Axis 1 (63.3%)")) +
ylab(expression("Axis 2 (13.9%)"))+
theme_classic(base_size = 10) +
ggtitle("(A) Genetic") +
theme(plot.title = element_text(face="bold", hjust = 0.5))+
theme(panel.border = element_rect(fill="transparent", colour = "black")) +
theme(legend.position = "none")
g<- g + geom_text_repel(aes(x =QH_eigen$`1`, y = QH_eigen$`2`),
label = rownames(QH_eigen), color = "black",nudge_x = 0.02, nudge_y = 0.04, size=4.5)
g
library(egg)
ggarrange(g, m, e, widths = c(1.5,1.5,1.5))
